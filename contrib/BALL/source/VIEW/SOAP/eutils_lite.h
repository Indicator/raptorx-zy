/* eutils_lite.h
   Generated by wsdl2h 1.2.9a from http://ncbi.nlm.nih.gov/entrez/eutils/soap/eutils_lite.wsdl and typemap.dat
   2006-11-20 15:13:35 GMT
   Copyright (C) 2001-2006 Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/* NOTE:

 - Compile this file with soapcpp2 to complete the code generation process.
 - Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control schema namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) to browse this file.
 - Use wsdl2h option -l to view the software license terms.

   DO NOT include this file directly into your project.
   Include only the soapcpp2-generated headers and source code files.
*/

//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * http://www.ncbi.nlm.nih.gov/soap/eutils/                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to disable)
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://www.ncbi.nlm.nih.gov/soap/eutils/"
ns2 = ""
ns3 = "http://www.ncbi.nlm.nih.gov/soap/eutils/egquery"
ns4 = "http://www.ncbi.nlm.nih.gov/soap/eutils/einfo"
ns5 = "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch"
ns6 = "http://www.ncbi.nlm.nih.gov/soap/eutils/esummary"
ns7 = "http://www.ncbi.nlm.nih.gov/soap/eutils/elink"
ns8 = "http://www.ncbi.nlm.nih.gov/soap/eutils/espell"

*/

//gsoap ns2   schema namespace:	
//gsoap ns3   schema namespace:	http://www.ncbi.nlm.nih.gov/soap/eutils/egquery
//gsoap ns4   schema namespace:	http://www.ncbi.nlm.nih.gov/soap/eutils/einfo
//gsoap ns5   schema namespace:	http://www.ncbi.nlm.nih.gov/soap/eutils/esearch
//gsoap ns6   schema namespace:	http://www.ncbi.nlm.nih.gov/soap/eutils/esummary
//gsoap ns7   schema namespace:	http://www.ncbi.nlm.nih.gov/soap/eutils/elink
//gsoap ns8   schema namespace:	http://www.ncbi.nlm.nih.gov/soap/eutils/espell
//gsoap ns2   schema form:	unqualified
//gsoap ns3   schema elementForm:	qualified
//gsoap ns3   schema attributeForm:	unqualified
//gsoap ns4   schema elementForm:	qualified
//gsoap ns4   schema attributeForm:	unqualified
//gsoap ns5   schema elementForm:	qualified
//gsoap ns5   schema attributeForm:	unqualified
//gsoap ns6   schema elementForm:	qualified
//gsoap ns6   schema attributeForm:	unqualified
//gsoap ns7   schema elementForm:	qualified
//gsoap ns7   schema attributeForm:	unqualified
//gsoap ns8   schema elementForm:	qualified
//gsoap ns8   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Schema Types                                                               *
 *                                                                            *
\******************************************************************************/


/// Primitive built-in type "xs:NMTOKEN"
typedef std::string xsd__NMTOKEN;


//  Forward declaration of class ns3__ResultItemType.
class ns3__ResultItemType;

//  Forward declaration of class ns3__eGQueryResultType.
class ns3__eGQueryResultType;

//  Forward declaration of class ns3__GQueryResultType.
class ns3__GQueryResultType;

//  Forward declaration of class _ns3__Result.
class _ns3__Result;

//  Forward declaration of class _ns3__eGqueryRequest.
class _ns3__eGqueryRequest;

//  Forward declaration of class _ns3__eGqueryRequestMS.
class _ns3__eGqueryRequestMS;

//  Forward declaration of class _ns3__ResultMS.
class _ns3__ResultMS;

//  Forward declaration of class ns4__DbInfoType.
class ns4__DbInfoType;

//  Forward declaration of class ns4__DbListType.
class ns4__DbListType;

//  Forward declaration of class ns4__FieldType.
class ns4__FieldType;

//  Forward declaration of class ns4__FieldListType.
class ns4__FieldListType;

//  Forward declaration of class ns4__LinkType.
class ns4__LinkType;

//  Forward declaration of class ns4__LinkListType.
class ns4__LinkListType;

//  Forward declaration of class ns4__eInfoResultType.
class ns4__eInfoResultType;

//  Forward declaration of class _ns4__eInfoResult.
class _ns4__eInfoResult;

//  Forward declaration of class _ns4__eInfoRequest.
class _ns4__eInfoRequest;

//  Forward declaration of class _ns4__eInfoRequestMS.
class _ns4__eInfoRequestMS;

//  Forward declaration of class _ns4__eInfoResultMS.
class _ns4__eInfoResultMS;

//  Forward declaration of class ns5__ErrorListType.
class ns5__ErrorListType;

//  Forward declaration of class ns5__IdListType.
class ns5__IdListType;

//  Forward declaration of class ns5__TermSetType.
class ns5__TermSetType;

//  Forward declaration of class ns5__TranslationType.
class ns5__TranslationType;

//  Forward declaration of class ns5__TranslationSetType.
class ns5__TranslationSetType;

//  Forward declaration of class ns5__TranslationStackType.
class ns5__TranslationStackType;

//  Forward declaration of class ns5__WarningListType.
class ns5__WarningListType;

//  Forward declaration of class ns5__eSearchResultType.
class ns5__eSearchResultType;

//  Forward declaration of class _ns5__eSearchResult.
class _ns5__eSearchResult;

//  Forward declaration of class _ns5__eSearchRequest.
class _ns5__eSearchRequest;

//  Forward declaration of class _ns5__eSearchRequestMS.
class _ns5__eSearchRequestMS;

//  Forward declaration of class _ns5__eSearchResultMS.
class _ns5__eSearchResultMS;

//  Forward declaration of class ns6__DocSumType.
class ns6__DocSumType;

//  Forward declaration of class ns6__ItemType.
class ns6__ItemType;

//  Forward declaration of class ns6__eSummaryResultType.
class ns6__eSummaryResultType;

//  Forward declaration of class _ns6__eSummaryResult.
class _ns6__eSummaryResult;

//  Forward declaration of class _ns6__eSummaryRequest.
class _ns6__eSummaryRequest;

//  Forward declaration of class _ns6__eSummaryRequestMS.
class _ns6__eSummaryRequestMS;

//  Forward declaration of class _ns6__eSummaryResultMS.
class _ns6__eSummaryResultMS;

//  Forward declaration of class ns7__IdType.
class ns7__IdType;

//  Forward declaration of class ns7__IdCheckListType.
class ns7__IdCheckListType;

//  Forward declaration of class ns7__IdLinkSetType.
class ns7__IdLinkSetType;

//  Forward declaration of class ns7__IdListType.
class ns7__IdListType;

//  Forward declaration of class ns7__IdUrlListType.
class ns7__IdUrlListType;

//  Forward declaration of class ns7__IdUrlSetType.
class ns7__IdUrlSetType;

//  Forward declaration of class ns7__LinkType.
class ns7__LinkType;

//  Forward declaration of class ns7__LinkInfoType.
class ns7__LinkInfoType;

//  Forward declaration of class ns7__LinkSetType.
class ns7__LinkSetType;

//  Forward declaration of class ns7__LinkSetDbType.
class ns7__LinkSetDbType;

//  Forward declaration of class ns7__ObjUrlType.
class ns7__ObjUrlType;

//  Forward declaration of class ns7__ProviderType.
class ns7__ProviderType;

//  Forward declaration of class ns7__eLinkResultType.
class ns7__eLinkResultType;

//  Forward declaration of class _ns7__eLinkResult.
class _ns7__eLinkResult;

//  Forward declaration of class _ns7__eLinkResultMS.
class _ns7__eLinkResultMS;

//  Forward declaration of class _ns7__eLinkRequest.
class _ns7__eLinkRequest;

//  Forward declaration of class _ns7__eLinkRequestMS.
class _ns7__eLinkRequestMS;

//  Forward declaration of class ns8__SpelledQueryType.
class ns8__SpelledQueryType;

//  Forward declaration of class ns8__eSpellResultType.
class ns8__eSpellResultType;

//  Forward declaration of class _ns8__eSpellResult.
class _ns8__eSpellResult;

//  Forward declaration of class _ns8__eSpellRequest.
class _ns8__eSpellRequest;

//  Forward declaration of class _ns8__eSpellResultMS.
class _ns8__eSpellResultMS;

//  Forward declaration of class _ns8__eSpellRequestMS.
class _ns8__eSpellRequestMS;

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/egquery":ResultItemType is a complexType.
class ns3__ResultItemType
{ public:
/// Element DbName of type xs:string.
    std::string                          DbName                         1;	///< Required element.
/// Element MenuName of type xs:string.
    std::string                          MenuName                       1;	///< Required element.
/// Element Count of type xs:string.
    std::string                          Count                          1;	///< Required element.
/// Element Status of type xs:string.
    std::string                          Status                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/egquery":eGQueryResultType is a complexType.
class ns3__eGQueryResultType
{ public:
/// Element ERROR_ of type xs:string.
    std::string*                         ERROR_                          0;	///< Optional element.
/// Vector of ns3__ResultItemType* with length 1..unbounded
    std::vector<ns3__ResultItemType*   > ResultItem                     1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/egquery":GQueryResultType is a complexType.
class ns3__GQueryResultType
{ public:
/// Element Term of type xs:string.
    std::string                          Term                           1;	///< Required element.
/// Element eGQueryResult of type "http://www.ncbi.nlm.nih.gov/soap/eutils/egquery":eGQueryResultType.
    ns3__eGQueryResultType*              eGQueryResult                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/egquery":Result of complexType.

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/egquery":Result is a complexType.
class _ns3__Result
{ public:
/// Element Term of type xs:string.
    std::string                          Term                           1;	///< Required element.
/// Element eGQueryResult of type "http://www.ncbi.nlm.nih.gov/soap/eutils/egquery":eGQueryResultType.
    ns3__eGQueryResultType*              eGQueryResult                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/egquery":eGqueryRequest of complexType.

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/egquery":eGqueryRequest is a complexType.
class _ns3__eGqueryRequest
{ public:
/// Element term of type xs:string.
    std::string*                         term                           0;	///< Optional element.
/// Element tool of type xs:string.
    std::string*                         tool                           0;	///< Optional element.
/// Element email of type xs:string.
    std::string*                         email                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/egquery":eGqueryRequestMS of complexType.

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/egquery":eGqueryRequestMS is a complexType.
class _ns3__eGqueryRequestMS
{ public:
/// Element term of type xs:string.
    std::string*                         term                           0;	///< Optional element.
/// Element tool of type xs:string.
    std::string*                         tool                           0;	///< Optional element.
/// Element email of type xs:string.
    std::string*                         email                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/egquery":ResultMS of complexType.

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/egquery":ResultMS is a complexType.
class _ns3__ResultMS
{ public:
/// Element Result of type "http://www.ncbi.nlm.nih.gov/soap/eutils/egquery":GQueryResultType.
    ns3__GQueryResultType*               Result                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/einfo":DbInfoType is a complexType.
class ns4__DbInfoType
{ public:
/// Element DbName of type xs:string.
    std::string                          DbName                         1;	///< Required element.
/// Element MenuName of type xs:string.
    std::string                          MenuName                       1;	///< Required element.
/// Element Description of type xs:string.
    std::string                          Description                    1;	///< Required element.
/// Element Count of type xs:string.
    std::string                          Count                          1;	///< Required element.
/// Element LastUpdate of type xs:string.
    std::string                          LastUpdate                     1;	///< Required element.
/// Element FieldList of type "http://www.ncbi.nlm.nih.gov/soap/eutils/einfo":FieldListType.
    ns4__FieldListType*                  FieldList                      1;	///< Required element.
/// Element LinkList of type "http://www.ncbi.nlm.nih.gov/soap/eutils/einfo":LinkListType.
    ns4__LinkListType*                   LinkList                       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/einfo":DbListType is a complexType.
class ns4__DbListType
{ public:
/// CHOICE OF ELEMENTS FOR choice
    int                                  __union_DbListType            ;	///< Union _ns4__union_DbListType selector: set to SOAP_UNION__ns4__union_DbListType_<fieldname>
/// Union for choice in ns4__DbListType*
    union _ns4__union_DbListType
    {
/// Vector of std::string with length 0..unbounded
    std::vector<std::string           > *DbName                         0;
    }                                    union_DbListType              ;
//  END OF CHOICE
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/einfo":FieldType is a complexType.
class ns4__FieldType
{ public:
/// Element Name of type xs:string.
    std::string                          Name                           1;	///< Required element.
/// Element Description of type xs:string.
    std::string                          Description                    1;	///< Required element.
/// Element TermCount of type xs:string.
    std::string                          TermCount                      1;	///< Required element.
/// Element IsDate of type xs:string.
    std::string                          IsDate                         1;	///< Required element.
/// Element IsNumerical of type xs:string.
    std::string                          IsNumerical                    1;	///< Required element.
/// Element SingleToken of type xs:string.
    std::string                          SingleToken                    1;	///< Required element.
/// Element Hierarchy of type xs:string.
    std::string                          Hierarchy                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/einfo":FieldListType is a complexType.
class ns4__FieldListType
{ public:
/// Vector of ns4__FieldType* with length 0..unbounded
    std::vector<ns4__FieldType*        > Field                          0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/einfo":LinkType is a complexType.
class ns4__LinkType
{ public:
/// Element Name of type xs:string.
    std::string                          Name                           1;	///< Required element.
/// Element Menu of type xs:string.
    std::string                          Menu                           1;	///< Required element.
/// Element Description of type xs:string.
    std::string                          Description                    1;	///< Required element.
/// Element DbTo of type xs:string.
    std::string                          DbTo                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/einfo":LinkListType is a complexType.
class ns4__LinkListType
{ public:
/// Vector of ns4__LinkType* with length 0..unbounded
    std::vector<ns4__LinkType*         > Link                           0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/einfo":eInfoResultType is a complexType.
class ns4__eInfoResultType
{ public:
/// Element ERROR_ of type xs:string.
    std::string*                         ERROR_                          0;	///< Optional element.
/// Element DbList of type "http://www.ncbi.nlm.nih.gov/soap/eutils/einfo":DbListType.
    ns4__DbListType*                     DbList                         0;	///< Optional element.
/// Element DbInfo of type "http://www.ncbi.nlm.nih.gov/soap/eutils/einfo":DbInfoType.
    ns4__DbInfoType*                     DbInfo                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/einfo":eInfoResult of complexType.

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/einfo":eInfoResult is a complexType.
class _ns4__eInfoResult
{ public:
/// Element ERROR_ of type xs:string.
    std::string*                         ERROR_                          0;	///< Optional element.
/// Element DbList of type "http://www.ncbi.nlm.nih.gov/soap/eutils/einfo":DbListType.
    ns4__DbListType*                     DbList                         0;	///< Optional element.
/// Element DbInfo of type "http://www.ncbi.nlm.nih.gov/soap/eutils/einfo":DbInfoType.
    ns4__DbInfoType*                     DbInfo                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/einfo":eInfoRequest of complexType.

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/einfo":eInfoRequest is a complexType.
class _ns4__eInfoRequest
{ public:
/// Element db of type xs:string.
    std::string*                         db                             0;	///< Optional element.
/// Element tool of type xs:string.
    std::string*                         tool                           0;	///< Optional element.
/// Element email of type xs:string.
    std::string*                         email                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/einfo":eInfoRequestMS of complexType.

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/einfo":eInfoRequestMS is a complexType.
class _ns4__eInfoRequestMS
{ public:
/// Element db of type xs:string.
    std::string*                         db                             0;	///< Optional element.
/// Element tool of type xs:string.
    std::string*                         tool                           0;	///< Optional element.
/// Element email of type xs:string.
    std::string*                         email                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/einfo":eInfoResultMS of complexType.

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/einfo":eInfoResultMS is a complexType.
class _ns4__eInfoResultMS
{ public:
/// Element eInfoResult of type "http://www.ncbi.nlm.nih.gov/soap/eutils/einfo":eInfoResultType.
    ns4__eInfoResultType*                eInfoResult                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":ErrorListType is a complexType.
class ns5__ErrorListType
{ public:
/// Vector of std::string with length 0..unbounded
    std::vector<std::string            > PhraseNotFound                 0;
/// Vector of std::string with length 0..unbounded
    std::vector<std::string            > FieldNotFound                  0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":IdListType is a complexType.
class ns5__IdListType
{ public:
/// Vector of std::string with length 0..unbounded
    std::vector<std::string            > Id                             0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":TermSetType is a complexType.
class ns5__TermSetType
{ public:
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":Term.
    std::string                          Term                           1;	///< Required element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":Field.
    std::string                          Field                          1;	///< Required element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":Count.
    std::string                          Count                          1;	///< Required element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":Explode.
    std::string                          Explode                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":TranslationType is a complexType.
class ns5__TranslationType
{ public:
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":From.
    std::string                          From                           1;	///< Required element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":To.
    std::string                          To                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":TranslationSetType is a complexType.
class ns5__TranslationSetType
{ public:
/// Vector of ns5__TranslationType* with length 0..unbounded
    std::vector<ns5__TranslationType*  > Translation                    0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":TranslationStackType is a complexType.
class ns5__TranslationStackType
{ public:
/// CHOICE OF ELEMENTS FOR choice minOccurs="0" maxOccurs="unbounded"
    int                                  __size_TranslationStackType    0;
    struct __ns5__union_TranslationStackType
    {
    int                                  __union_TranslationStackType   0;	///< Union _ns5__union_TranslationStackType selector: set to SOAP_UNION__ns5__union_TranslationStackType_<fieldname> or 0
/// Union for choice in ns5__TranslationStackType*
    union _ns5__union_TranslationStackType
    {
/// Element TermSet of type "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":TermSetType.
    ns5__TermSetType*                    TermSet                        1;	///< Required element.
/// Element OP of type xs:string.
    std::string*                         OP                             1;	///< Required element.
    }                                    union_TranslationStackType    ;
    }                                   *__union_TranslationStackType  ;
//  END OF CHOICE
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":WarningListType is a complexType.
class ns5__WarningListType
{ public:
/// Vector of std::string with length 0..unbounded
    std::vector<std::string            > PhraseIgnored                  0;
/// Vector of std::string with length 0..unbounded
    std::vector<std::string            > QuotedPhraseNotFound           0;
/// Vector of std::string with length 0..unbounded
    std::vector<std::string            > OutputMessage                  0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":eSearchResultType is a complexType.
class ns5__eSearchResultType
{ public:
/// Element ErrorList of type "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":ErrorListType.
    ns5__ErrorListType*                  ErrorList                      0;	///< Optional element.
/// Element WarningList of type "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":WarningListType.
    ns5__WarningListType*                WarningList                    0;	///< Optional element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":ERROR_.
    std::string*                         ERROR_                          0;	///< Optional element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":Count.
    std::string*                         Count                          0;	///< Optional element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":RetMax.
    std::string*                         RetMax                         0;	///< Optional element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":RetStart.
    std::string*                         RetStart                       0;	///< Optional element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":QueryKey.
    std::string*                         QueryKey                       0;	///< Optional element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":WebEnv.
    std::string*                         WebEnv                         0;	///< Optional element.
/// Element IdList of type "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":IdListType.
    ns5__IdListType*                     IdList                         0;	///< Optional element.
/// Element TranslationSet of type "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":TranslationSetType.
    ns5__TranslationSetType*             TranslationSet                 0;	///< Optional element.
/// Element TranslationStack of type "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":TranslationStackType.
    ns5__TranslationStackType*           TranslationStack               0;	///< Optional element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":QueryTranslation.
    std::string*                         QueryTranslation               0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":eSearchResult of complexType.

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":eSearchResult is a complexType.
class _ns5__eSearchResult
{ public:
/// Element ErrorList of type "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":ErrorListType.
    ns5__ErrorListType*                  ErrorList                      0;	///< Optional element.
/// Element WarningList of type "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":WarningListType.
    ns5__WarningListType*                WarningList                    0;	///< Optional element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":ERROR_.
    std::string*                         ERROR_                          0;	///< Optional element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":Count.
    std::string*                         Count                          0;	///< Optional element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":RetMax.
    std::string*                         RetMax                         0;	///< Optional element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":RetStart.
    std::string*                         RetStart                       0;	///< Optional element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":QueryKey.
    std::string*                         QueryKey                       0;	///< Optional element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":WebEnv.
    std::string*                         WebEnv                         0;	///< Optional element.
/// Element IdList of type "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":IdListType.
    ns5__IdListType*                     IdList                         0;	///< Optional element.
/// Element TranslationSet of type "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":TranslationSetType.
    ns5__TranslationSetType*             TranslationSet                 0;	///< Optional element.
/// Element TranslationStack of type "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":TranslationStackType.
    ns5__TranslationStackType*           TranslationStack               0;	///< Optional element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":QueryTranslation.
    std::string*                         QueryTranslation               0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":eSearchRequest of complexType.

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":eSearchRequest is a complexType.
class _ns5__eSearchRequest
{ public:
/// Element db of type xs:string.
    std::string*                         db                             0;	///< Optional element.
/// Element term of type xs:string.
    std::string*                         term                           0;	///< Optional element.
/// Element WebEnv of type xs:string.
    std::string*                         WebEnv                         0;	///< Optional element.
/// Element QueryKey of type xs:string.
    std::string*                         QueryKey                       0;	///< Optional element.
/// Element usehistory of type xs:string.
    std::string*                         usehistory                     0;	///< Optional element.
/// Element tool of type xs:string.
    std::string*                         tool                           0;	///< Optional element.
/// Element email of type xs:string.
    std::string*                         email                          0;	///< Optional element.
/// Element field of type xs:string.
    std::string*                         field                          0;	///< Optional element.
/// Element reldate of type xs:string.
    std::string*                         reldate                        0;	///< Optional element.
/// Element mindate of type xs:string.
    std::string*                         mindate                        0;	///< Optional element.
/// Element maxdate of type xs:string.
    std::string*                         maxdate                        0;	///< Optional element.
/// Element datetype of type xs:string.
    std::string*                         datetype                       0;	///< Optional element.
/// Element RetStart of type xs:string.
    std::string*                         RetStart                       0;	///< Optional element.
/// Element RetMax of type xs:string.
    std::string*                         RetMax                         0;	///< Optional element.
/// Element rettype of type xs:string.
    std::string*                         rettype                        0;	///< Optional element.
/// Element sort of type xs:string.
    std::string*                         sort                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":eSearchRequestMS of complexType.

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":eSearchRequestMS is a complexType.
class _ns5__eSearchRequestMS
{ public:
/// Element db of type xs:string.
    std::string*                         db                             0;	///< Optional element.
/// Element term of type xs:string.
    std::string*                         term                           0;	///< Optional element.
/// Element WebEnv of type xs:string.
    std::string*                         WebEnv                         0;	///< Optional element.
/// Element query_key of type xs:string.
    std::string*                         query_USCOREkey                0;	///< Optional element.
/// Element usehistory of type xs:string.
    std::string*                         usehistory                     0;	///< Optional element.
/// Element tool of type xs:string.
    std::string*                         tool                           0;	///< Optional element.
/// Element email of type xs:string.
    std::string*                         email                          0;	///< Optional element.
/// Element field of type xs:string.
    std::string*                         field                          0;	///< Optional element.
/// Element reldate of type xs:string.
    std::string*                         reldate                        0;	///< Optional element.
/// Element mindate of type xs:string.
    std::string*                         mindate                        0;	///< Optional element.
/// Element maxdate of type xs:string.
    std::string*                         maxdate                        0;	///< Optional element.
/// Element datetype of type xs:string.
    std::string*                         datetype                       0;	///< Optional element.
/// Element retstart of type xs:string.
    std::string*                         retstart                       0;	///< Optional element.
/// Element retmax of type xs:string.
    std::string*                         retmax                         0;	///< Optional element.
/// Element rettype of type xs:string.
    std::string*                         rettype                        0;	///< Optional element.
/// Element sort of type xs:string.
    std::string*                         sort                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":eSearchResultMS of complexType.

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":eSearchResultMS is a complexType.
class _ns5__eSearchResultMS
{ public:
/// Element eSearchResult of type "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":eSearchResultType.
    ns5__eSearchResultType*              eSearchResult                  0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/esummary":DocSumType is a complexType.
class ns6__DocSumType
{ public:
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/esummary":Id.
    std::string                          Id                             1;	///< Required element.
/// Vector of ns6__ItemType* with length 1..unbounded
    std::vector<ns6__ItemType*         > Item                           1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/esummary":ItemType is a complexType.
class ns6__ItemType
{ public:
/// CHOICE OF ELEMENTS FOR choice minOccurs="0" maxOccurs="unbounded"
    int                                  __size_ItemType                0;
    struct __ns6__union_ItemType
    {
    int                                  __union_ItemType               0;	///< Union _ns6__union_ItemType selector: set to SOAP_UNION__ns6__union_ItemType_<fieldname> or 0
/// Union for choice in ns6__ItemType*
    union _ns6__union_ItemType
    {
/// Element Item of type "http://www.ncbi.nlm.nih.gov/soap/eutils/esummary":ItemType.
    ns6__ItemType*                       Item                           1;	///< Required element.
    }                                    union_ItemType                ;
    }                                   *__union_ItemType              ;
//  END OF CHOICE
/// Attribute Name of type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
@    enum _ns6__ItemType_Type
    {
	_ns6__ItemType_Type__Integer,	///< xs:NMTOKEN value="Integer"
	_ns6__ItemType_Type__Date,	///< xs:NMTOKEN value="Date"
	_ns6__ItemType_Type__String,	///< xs:NMTOKEN value="String"
	_ns6__ItemType_Type__Structure,	///< xs:NMTOKEN value="Structure"
	_ns6__ItemType_Type__List,	///< xs:NMTOKEN value="List"
	_ns6__ItemType_Type__Flags,	///< xs:NMTOKEN value="Flags"
	_ns6__ItemType_Type__Qualifier,	///< xs:NMTOKEN value="Qualifier"
	_ns6__ItemType_Type__Enumerator,	///< xs:NMTOKEN value="Enumerator"
	_ns6__ItemType_Type__Unknown,	///< xs:NMTOKEN value="Unknown"
    }
                                         Type                           1;	///< Required attribute.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d to use xsd__anyType DOM.
    _XML                                 __mixed                       ;	///< Catch mixed content in XML string
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/esummary":eSummaryResultType is a complexType.
class ns6__eSummaryResultType
{ public:
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/esummary":ERROR_.
    std::string*                         ERROR_                          0;	///< Optional element.
/// Vector of ns6__DocSumType* with length 0..unbounded
    std::vector<ns6__DocSumType*       > DocSum                         0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esummary":eSummaryResult of complexType.

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/esummary":eSummaryResult is a complexType.
class _ns6__eSummaryResult
{ public:
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/esummary":ERROR_.
    std::string*                         ERROR_                          0;	///< Optional element.
/// Vector of ns6__DocSumType* with length 0..unbounded
    std::vector<ns6__DocSumType*       > DocSum                         0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esummary":eSummaryRequest of complexType.

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/esummary":eSummaryRequest is a complexType.
class _ns6__eSummaryRequest
{ public:
/// Element db of type xs:string.
    std::string*                         db                             0;	///< Optional element.
/// Element id of type xs:string.
    std::string*                         id                             0;	///< Optional element.
/// Element WebEnv of type xs:string.
    std::string*                         WebEnv                         0;	///< Optional element.
/// Element query_key of type xs:string.
    std::string*                         query_USCOREkey                0;	///< Optional element.
/// Element retstart of type xs:string.
    std::string*                         retstart                       0;	///< Optional element.
/// Element retmax of type xs:string.
    std::string*                         retmax                         0;	///< Optional element.
/// Element tool of type xs:string.
    std::string*                         tool                           0;	///< Optional element.
/// Element email of type xs:string.
    std::string*                         email                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esummary":eSummaryRequestMS of complexType.

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/esummary":eSummaryRequestMS is a complexType.
class _ns6__eSummaryRequestMS
{ public:
/// Element db of type xs:string.
    std::string*                         db                             0;	///< Optional element.
/// Element id of type xs:string.
    std::string*                         id                             0;	///< Optional element.
/// Element WebEnv of type xs:string.
    std::string*                         WebEnv                         0;	///< Optional element.
/// Element query_key of type xs:string.
    std::string*                         query_USCOREkey                0;	///< Optional element.
/// Element retstart of type xs:string.
    std::string*                         retstart                       0;	///< Optional element.
/// Element retmax of type xs:string.
    std::string*                         retmax                         0;	///< Optional element.
/// Element tool of type xs:string.
    std::string*                         tool                           0;	///< Optional element.
/// Element email of type xs:string.
    std::string*                         email                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esummary":eSummaryResultMS of complexType.

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/esummary":eSummaryResultMS is a complexType.
class _ns6__eSummaryResultMS
{ public:
/// Element eSummaryResult of type "http://www.ncbi.nlm.nih.gov/soap/eutils/esummary":eSummaryResultType.
    ns6__eSummaryResultType*             eSummaryResult                 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":IdCheckListType is a complexType.
class ns7__IdCheckListType
{ public:
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":ERROR_.
    std::string*                         ERROR_                          0;	///< Optional element.
/// CHOICE OF ELEMENTS FOR choice minOccurs="0" maxOccurs="unbounded"
    int                                  __size_IdCheckListType         0;
    struct __ns7__union_IdCheckListType
    {
    int                                  __union_IdCheckListType        0;	///< Union _ns7__union_IdCheckListType selector: set to SOAP_UNION__ns7__union_IdCheckListType_<fieldname> or 0
    union _ns7__union_IdCheckListType
    {
/// Element Id of type "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":IdType.
    ns7__IdType*                         Id                             1;	///< Required element.
/// Element IdLinkSet of type "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":IdLinkSetType.
    ns7__IdLinkSetType*                  IdLinkSet                      1;	///< Required element.
    }                                    union_IdCheckListType         ;
    }                                   *__union_IdCheckListType       ;
//  END OF CHOICE
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":IdLinkSetType is a complexType.
class ns7__IdLinkSetType
{ public:
/// Vector of ns7__LinkInfoType* with length 0..unbounded
    std::vector<ns7__LinkInfoType*     > LinkInfo                       0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":IdListType is a complexType.
class ns7__IdListType
{ public:
/// Vector of ns7__IdType* with length 0..unbounded
    std::vector<ns7__IdType*           > Id                             0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":IdUrlListType is a complexType.
class ns7__IdUrlListType
{ public:
/// Vector of ns7__IdUrlSetType* with length 0..unbounded
    std::vector<ns7__IdUrlSetType*     > IdUrlSet                       0;
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":ERROR_.
    std::string*                         ERROR_                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":IdUrlSetType is a complexType.
class ns7__IdUrlSetType
{ public:
/// Element Id of type "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":IdType.
    ns7__IdType*                         Id                             1;	///< Required element.
/// CHOICE OF ELEMENTS FOR choice
    int                                  __union_IdUrlSetType          ;	///< Union _ns7__union_IdUrlSetType selector: set to SOAP_UNION__ns7__union_IdUrlSetType_<fieldname>
    union _ns7__union_IdUrlSetType
    {
/// Vector of ns7__ObjUrlType* with length 1..unbounded
    std::vector<ns7__ObjUrlType*      > *ObjUrl                         1;
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":Info.
    std::string*                         Info                           1;	///< Required element.
    }                                    union_IdUrlSetType            ;
//  END OF CHOICE
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":LinkType is a complexType.
class ns7__LinkType
{ public:
/// Element Id of type "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":IdType.
    ns7__IdType*                         Id                             1;	///< Required element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":Score.
    std::string*                         Score                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":LinkInfoType is a complexType.
class ns7__LinkInfoType
{ public:
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":DbTo.
    std::string                          DbTo                           1;	///< Required element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":LinkName.
    std::string                          LinkName                       1;	///< Required element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":MenuTag.
    std::string                          MenuTag                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":LinkSetType is a complexType.
class ns7__LinkSetType
{ public:
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":DbFrom.
    std::string                          DbFrom                         1;	///< Required element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":ERROR_.
    std::string*                         ERROR_                          0;	///< Optional element.
/// Element IdList of type "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":IdListType.
    ns7__IdListType*                     IdList                         0;	///< Optional element.
/// Vector of ns7__LinkSetDbType* with length 0..unbounded
    std::vector<ns7__LinkSetDbType*    > LinkSetDb                      0;
/// Element IdUrlList of type "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":IdUrlListType.
    ns7__IdUrlListType*                  IdUrlList                      0;	///< Optional element.
/// Element IdCheckList of type "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":IdCheckListType.
    ns7__IdCheckListType*                IdCheckList                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":LinkSetDbType is a complexType.
class ns7__LinkSetDbType
{ public:
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":DbTo.
    std::string                          DbTo                           1;	///< Required element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":LinkName.
    std::string                          LinkName                       1;	///< Required element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":ERROR_.
    std::string*                         ERROR_                          0;	///< Optional element.
/// CHOICE OF ELEMENTS FOR choice
    int                                  __union_LinkSetDbType         ;	///< Union _ns7__union_LinkSetDbType selector: set to SOAP_UNION__ns7__union_LinkSetDbType_<fieldname>
    union _ns7__union_LinkSetDbType
    {
/// Vector of ns7__LinkType* with length 0..unbounded
    std::vector<ns7__LinkType*        > *Link                           0;
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":Info.
    std::string*                         Info                           1;	///< Required element.
    }                                    union_LinkSetDbType           ;
//  END OF CHOICE
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":ObjUrlType is a complexType.
class ns7__ObjUrlType
{ public:
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":Url.
    std::string                          Url                            1;	///< Required element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":IconUrl.
    std::string*                         IconUrl                        0;	///< Optional element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":LinkName.
    std::string*                         LinkName                       0;	///< Optional element.
/// Vector of std::string with length 0..unbounded
    std::vector<std::string            > SubjectType                    0;
/// Vector of std::string with length 0..unbounded
    std::vector<std::string            > Attribute                      0;
/// Element Provider of type "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":ProviderType.
    ns7__ProviderType*                   Provider                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":ProviderType is a complexType.
class ns7__ProviderType
{ public:
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":Name.
    std::string                          Name                           1;	///< Required element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":NameAbbr.
    std::string                          NameAbbr                       1;	///< Required element.
/// Element Id of type "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":IdType.
    ns7__IdType*                         Id                             1;	///< Required element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":Url.
    std::string                          Url                            1;	///< Required element.
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":IconUrl.
    std::string*                         IconUrl                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":eLinkResultType is a complexType.
class ns7__eLinkResultType
{ public:
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":ERROR_.
    std::string*                         ERROR_                          0;	///< Optional element.
/// Vector of ns7__LinkSetType* with length 0..unbounded
    std::vector<ns7__LinkSetType*      > LinkSet                        0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":eLinkResult of complexType.

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":eLinkResult is a complexType.
class _ns7__eLinkResult
{ public:
/// Element reference "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":ERROR_.
    std::string*                         ERROR_                          0;	///< Optional element.
/// Vector of ns7__LinkSetType* with length 0..unbounded
    std::vector<ns7__LinkSetType*      > LinkSet                        0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":eLinkResultMS of complexType.

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":eLinkResultMS is a complexType.
class _ns7__eLinkResultMS
{ public:
/// Element eLinkResult of type "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":eLinkResultType.
    ns7__eLinkResultType*                eLinkResult                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":eLinkRequest of complexType.

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":eLinkRequest is a complexType.
class _ns7__eLinkRequest
{ public:
/// Element db of type xs:string.
    std::string*                         db                             0;	///< Optional element.
/// Vector of std::string with length 0..unbounded
    std::vector<std::string            > id                             0;
/// Element reldate of type xs:string.
    std::string*                         reldate                        0;	///< Optional element.
/// Element mindate of type xs:string.
    std::string*                         mindate                        0;	///< Optional element.
/// Element maxdate of type xs:string.
    std::string*                         maxdate                        0;	///< Optional element.
/// Element datetype of type xs:string.
    std::string*                         datetype                       0;	///< Optional element.
/// Element term of type xs:string.
    std::string*                         term                           0;	///< Optional element.
/// Element dbfrom of type xs:string.
    std::string*                         dbfrom                         0;	///< Optional element.
/// Element WebEnv of type xs:string.
    std::string*                         WebEnv                         0;	///< Optional element.
/// Element query_key of type xs:string.
    std::string*                         query_USCOREkey                0;	///< Optional element.
/// Element cmd of type xs:string.
    std::string*                         cmd                            0;	///< Optional element.
/// Element tool of type xs:string.
    std::string*                         tool                           0;	///< Optional element.
/// Element email of type xs:string.
    std::string*                         email                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":eLinkRequestMS of complexType.

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":eLinkRequestMS is a complexType.
class _ns7__eLinkRequestMS
{ public:
/// Element db of type xs:string.
    std::string*                         db                             0;	///< Optional element.
/// Vector of std::string with length 0..unbounded
    std::vector<std::string            > id                             0;
/// Element reldate of type xs:string.
    std::string*                         reldate                        0;	///< Optional element.
/// Element mindate of type xs:string.
    std::string*                         mindate                        0;	///< Optional element.
/// Element maxdate of type xs:string.
    std::string*                         maxdate                        0;	///< Optional element.
/// Element datetype of type xs:string.
    std::string*                         datetype                       0;	///< Optional element.
/// Element term of type xs:string.
    std::string*                         term                           0;	///< Optional element.
/// Element dbfrom of type xs:string.
    std::string*                         dbfrom                         0;	///< Optional element.
/// Element WebEnv of type xs:string.
    std::string*                         WebEnv                         0;	///< Optional element.
/// Element query_key of type xs:string.
    std::string*                         query_USCOREkey                0;	///< Optional element.
/// Element cmd of type xs:string.
    std::string*                         cmd                            0;	///< Optional element.
/// Element tool of type xs:string.
    std::string*                         tool                           0;	///< Optional element.
/// Element email of type xs:string.
    std::string*                         email                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/espell":SpelledQueryType is a complexType.
class ns8__SpelledQueryType
{ public:
/// CHOICE OF ELEMENTS FOR choice minOccurs="0" maxOccurs="unbounded"
    int                                  __size_SpelledQueryType        0;
    struct __ns8__union_SpelledQueryType
    {
    int                                  __union_SpelledQueryType       0;	///< Union _ns8__union_SpelledQueryType selector: set to SOAP_UNION__ns8__union_SpelledQueryType_<fieldname> or 0
/// Union for choice in ns8__SpelledQueryType*
    union _ns8__union_SpelledQueryType
    {
/// Element Replaced of type xs:string.
    std::string*                         Replaced                       1;	///< Required element.
/// Element Original of type xs:string.
    std::string*                         Original                       1;	///< Required element.
    }                                    union_SpelledQueryType        ;
    }                                   *__union_SpelledQueryType      ;
//  END OF CHOICE
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/espell":eSpellResultType is a complexType.
class ns8__eSpellResultType
{ public:
/// Element ERROR_ of type xs:string.
    std::string                          ERROR_                          1;	///< Required element.
/// Element Database of type xs:string.
    std::string                          Database                       1;	///< Required element.
/// Element Query of type xs:string.
    std::string                          Query                          1;	///< Required element.
/// Element CorrectedQuery of type xs:string.
    std::string                          CorrectedQuery                 1;	///< Required element.
/// Element SpelledQuery of type "http://www.ncbi.nlm.nih.gov/soap/eutils/espell":SpelledQueryType.
    ns8__SpelledQueryType*               SpelledQuery                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/espell":eSpellResult of complexType.

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/espell":eSpellResult is a complexType.
class _ns8__eSpellResult
{ public:
/// Element ERROR_ of type xs:string.
    std::string                          ERROR_                          1;	///< Required element.
/// Element Database of type xs:string.
    std::string                          Database                       1;	///< Required element.
/// Element Query of type xs:string.
    std::string                          Query                          1;	///< Required element.
/// Element CorrectedQuery of type xs:string.
    std::string                          CorrectedQuery                 1;	///< Required element.
/// Element SpelledQuery of type "http://www.ncbi.nlm.nih.gov/soap/eutils/espell":SpelledQueryType.
    ns8__SpelledQueryType*               SpelledQuery                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/espell":eSpellRequest of complexType.

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/espell":eSpellRequest is a complexType.
class _ns8__eSpellRequest
{ public:
/// Element db of type xs:string.
    std::string*                         db                             0;	///< Optional element.
/// Element term of type xs:string.
    std::string*                         term                           0;	///< Optional element.
/// Element tool of type xs:string.
    std::string*                         tool                           0;	///< Optional element.
/// Element email of type xs:string.
    std::string*                         email                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/espell":eSpellResultMS of complexType.

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/espell":eSpellResultMS is a complexType.
class _ns8__eSpellResultMS
{ public:
/// Element eSpellResult of type "http://www.ncbi.nlm.nih.gov/soap/eutils/espell":eSpellResultType.
    ns8__eSpellResultType*               eSpellResult                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/espell":eSpellRequestMS of complexType.

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/espell":eSpellRequestMS is a complexType.
class _ns8__eSpellRequestMS
{ public:
/// Element db of type xs:string.
    std::string*                         db                             0;	///< Optional element.
/// Element term of type xs:string.
    std::string*                         term                           0;	///< Optional element.
/// Element tool of type xs:string.
    std::string*                         tool                           0;	///< Optional element.
/// Element email of type xs:string.
    std::string*                         email                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":IdType is a complexType with simpleContent.
class ns7__IdType
{ public:
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
@    enum _ns7__IdType_HasLinkOut
    {
	_ns7__IdType_HasLinkOut__Y,	///< xs:NMTOKEN value="Y"
	_ns7__IdType_HasLinkOut__N,	///< xs:NMTOKEN value="N"
    }
                                         HasLinkOut                     0;	///< Optional attribute.
@    enum _ns7__IdType_HasNeighbor
    {
	_ns7__IdType_HasNeighbor__Y,	///< xs:NMTOKEN value="Y"
	_ns7__IdType_HasNeighbor__N,	///< xs:NMTOKEN value="N"
    }
                                         HasNeighbor                    0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":Count of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":ERROR_ of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":Explode of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":Field of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":FieldNotFound of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":From of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":Id of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":OutputMessage of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":PhraseIgnored of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":PhraseNotFound of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":QueryKey of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":QueryTranslation of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":QuotedPhraseNotFound of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":RetMax of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":RetStart of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":Term of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":To of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esearch":WebEnv of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esummary":ERROR_ of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/esummary":Id of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":Attribute of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":DbFrom of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":DbTo of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":ERROR_ of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":IconUrl of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":Info of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":LinkName of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":Name of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":NameAbbr of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":Score of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":SubjectType of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":Url of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ncbi.nlm.nih.gov/soap/eutils/elink":MenuTag of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	eUtilsServiceSoap 
//gsoap ns1  service type:	eUtilsServiceSoap 
//gsoap ns1  service port:	http://www.ncbi.nlm.nih.gov/entrez/eutils/soap/soap_adapter_1_5.cgi 
//gsoap ns1  service namespace:	http://www.ncbi.nlm.nih.gov/soap/eutils/ 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Bindings
  - @ref eUtilsServiceSoap

*/

/**

@page eUtilsServiceSoap Binding "eUtilsServiceSoap"

@section eUtilsServiceSoap_operations Operations of Binding  "eUtilsServiceSoap"
  - @ref __ns1__run_USCOREeGquery
  - @ref __ns1__run_USCOREeGquery_USCOREMS
  - @ref __ns1__run_USCOREeInfo
  - @ref __ns1__run_USCOREeInfo_USCOREMS
  - @ref __ns1__run_USCOREeSearch
  - @ref __ns1__run_USCOREeSearch_USCOREMS
  - @ref __ns1__run_USCOREeSummary
  - @ref __ns1__run_USCOREeSummary_USCOREMS
  - @ref __ns1__run_USCOREeLink
  - @ref __ns1__run_USCOREeLink_USCOREMS
  - @ref __ns1__run_USCOREeSpell
  - @ref __ns1__run_USCOREeSpell_USCOREMS

@section eUtilsServiceSoap_ports Endpoints of Binding  "eUtilsServiceSoap"
  - http://www.ncbi.nlm.nih.gov/entrez/eutils/soap/soap_adapter_1_5.cgi

*/

/******************************************************************************\
 *                                                                            *
 * eUtilsServiceSoap                                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __ns1__run_USCOREeGquery                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__run_USCOREeGquery" of service binding "eUtilsServiceSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="egquery"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call___ns1__run_USCOREeGquery(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns3__eGqueryRequest*               ns3__eGqueryRequest,
    // response parameters:
    _ns3__Result*                       ns3__Result
  );
@endcode

C++ proxy class (defined in soapeUtilsServiceSoapProxy.h):
  class eUtilsServiceSoap;

*/

//gsoap ns1  service method-style:	run_USCOREeGquery document
//gsoap ns1  service method-encoding:	run_USCOREeGquery literal
//gsoap ns1  service method-action:	run_USCOREeGquery egquery
int __ns1__run_USCOREeGquery(
    _ns3__eGqueryRequest*               ns3__eGqueryRequest,	///< Request parameter
    _ns3__Result*                       ns3__Result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__run_USCOREeGquery_USCOREMS                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__run_USCOREeGquery_USCOREMS" of service binding "eUtilsServiceSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="egqueryms"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call___ns1__run_USCOREeGquery_USCOREMS(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns3__eGqueryRequestMS*             ns3__eGqueryRequestMS,
    // response parameters:
    _ns3__ResultMS*                     ns3__ResultMS
  );
@endcode

C++ proxy class (defined in soapeUtilsServiceSoapProxy.h):
  class eUtilsServiceSoap;

*/

//gsoap ns1  service method-style:	run_USCOREeGquery_USCOREMS document
//gsoap ns1  service method-encoding:	run_USCOREeGquery_USCOREMS literal
//gsoap ns1  service method-action:	run_USCOREeGquery_USCOREMS egqueryms
int __ns1__run_USCOREeGquery_USCOREMS(
    _ns3__eGqueryRequestMS*             ns3__eGqueryRequestMS,	///< Request parameter
    _ns3__ResultMS*                     ns3__ResultMS	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__run_USCOREeInfo                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__run_USCOREeInfo" of service binding "eUtilsServiceSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="einfo"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call___ns1__run_USCOREeInfo(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__eInfoRequest*                 ns4__eInfoRequest,
    // response parameters:
    _ns4__eInfoResult*                  ns4__eInfoResult
  );
@endcode

C++ proxy class (defined in soapeUtilsServiceSoapProxy.h):
  class eUtilsServiceSoap;

*/

//gsoap ns1  service method-style:	run_USCOREeInfo document
//gsoap ns1  service method-encoding:	run_USCOREeInfo literal
//gsoap ns1  service method-action:	run_USCOREeInfo einfo
int __ns1__run_USCOREeInfo(
    _ns4__eInfoRequest*                 ns4__eInfoRequest,	///< Request parameter
    _ns4__eInfoResult*                  ns4__eInfoResult	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__run_USCOREeInfo_USCOREMS                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__run_USCOREeInfo_USCOREMS" of service binding "eUtilsServiceSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="einfoms"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call___ns1__run_USCOREeInfo_USCOREMS(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns4__eInfoRequestMS*               ns4__eInfoRequestMS,
    // response parameters:
    _ns4__eInfoResultMS*                ns4__eInfoResultMS
  );
@endcode

C++ proxy class (defined in soapeUtilsServiceSoapProxy.h):
  class eUtilsServiceSoap;

*/

//gsoap ns1  service method-style:	run_USCOREeInfo_USCOREMS document
//gsoap ns1  service method-encoding:	run_USCOREeInfo_USCOREMS literal
//gsoap ns1  service method-action:	run_USCOREeInfo_USCOREMS einfoms
int __ns1__run_USCOREeInfo_USCOREMS(
    _ns4__eInfoRequestMS*               ns4__eInfoRequestMS,	///< Request parameter
    _ns4__eInfoResultMS*                ns4__eInfoResultMS	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__run_USCOREeSearch                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__run_USCOREeSearch" of service binding "eUtilsServiceSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="esearch"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call___ns1__run_USCOREeSearch(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns5__eSearchRequest*               ns5__eSearchRequest,
    // response parameters:
    _ns5__eSearchResult*                ns5__eSearchResult
  );
@endcode

C++ proxy class (defined in soapeUtilsServiceSoapProxy.h):
  class eUtilsServiceSoap;

*/

//gsoap ns1  service method-style:	run_USCOREeSearch document
//gsoap ns1  service method-encoding:	run_USCOREeSearch literal
//gsoap ns1  service method-action:	run_USCOREeSearch esearch
int __ns1__run_USCOREeSearch(
    _ns5__eSearchRequest*               ns5__eSearchRequest,	///< Request parameter
    _ns5__eSearchResult*                ns5__eSearchResult	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__run_USCOREeSearch_USCOREMS                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__run_USCOREeSearch_USCOREMS" of service binding "eUtilsServiceSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="esearchms"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call___ns1__run_USCOREeSearch_USCOREMS(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns5__eSearchRequestMS*             ns5__eSearchRequestMS,
    // response parameters:
    _ns5__eSearchResultMS*              ns5__eSearchResultMS
  );
@endcode

C++ proxy class (defined in soapeUtilsServiceSoapProxy.h):
  class eUtilsServiceSoap;

*/

//gsoap ns1  service method-style:	run_USCOREeSearch_USCOREMS document
//gsoap ns1  service method-encoding:	run_USCOREeSearch_USCOREMS literal
//gsoap ns1  service method-action:	run_USCOREeSearch_USCOREMS esearchms
int __ns1__run_USCOREeSearch_USCOREMS(
    _ns5__eSearchRequestMS*             ns5__eSearchRequestMS,	///< Request parameter
    _ns5__eSearchResultMS*              ns5__eSearchResultMS	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__run_USCOREeSummary                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__run_USCOREeSummary" of service binding "eUtilsServiceSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="esummary"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call___ns1__run_USCOREeSummary(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns6__eSummaryRequest*              ns6__eSummaryRequest,
    // response parameters:
    _ns6__eSummaryResult*               ns6__eSummaryResult
  );
@endcode

C++ proxy class (defined in soapeUtilsServiceSoapProxy.h):
  class eUtilsServiceSoap;

*/

//gsoap ns1  service method-style:	run_USCOREeSummary document
//gsoap ns1  service method-encoding:	run_USCOREeSummary literal
//gsoap ns1  service method-action:	run_USCOREeSummary esummary
int __ns1__run_USCOREeSummary(
    _ns6__eSummaryRequest*              ns6__eSummaryRequest,	///< Request parameter
    _ns6__eSummaryResult*               ns6__eSummaryResult	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__run_USCOREeSummary_USCOREMS                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__run_USCOREeSummary_USCOREMS" of service binding "eUtilsServiceSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="esummaryms"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call___ns1__run_USCOREeSummary_USCOREMS(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns6__eSummaryRequestMS*            ns6__eSummaryRequestMS,
    // response parameters:
    _ns6__eSummaryResultMS*             ns6__eSummaryResultMS
  );
@endcode

C++ proxy class (defined in soapeUtilsServiceSoapProxy.h):
  class eUtilsServiceSoap;

*/

//gsoap ns1  service method-style:	run_USCOREeSummary_USCOREMS document
//gsoap ns1  service method-encoding:	run_USCOREeSummary_USCOREMS literal
//gsoap ns1  service method-action:	run_USCOREeSummary_USCOREMS esummaryms
int __ns1__run_USCOREeSummary_USCOREMS(
    _ns6__eSummaryRequestMS*            ns6__eSummaryRequestMS,	///< Request parameter
    _ns6__eSummaryResultMS*             ns6__eSummaryResultMS	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__run_USCOREeLink                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__run_USCOREeLink" of service binding "eUtilsServiceSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="elink"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call___ns1__run_USCOREeLink(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns7__eLinkRequest*                 ns7__eLinkRequest,
    // response parameters:
    _ns7__eLinkResult*                  ns7__eLinkResult
  );
@endcode

C++ proxy class (defined in soapeUtilsServiceSoapProxy.h):
  class eUtilsServiceSoap;

*/

//gsoap ns1  service method-style:	run_USCOREeLink document
//gsoap ns1  service method-encoding:	run_USCOREeLink literal
//gsoap ns1  service method-action:	run_USCOREeLink elink
int __ns1__run_USCOREeLink(
    _ns7__eLinkRequest*                 ns7__eLinkRequest,	///< Request parameter
    _ns7__eLinkResult*                  ns7__eLinkResult	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__run_USCOREeLink_USCOREMS                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__run_USCOREeLink_USCOREMS" of service binding "eUtilsServiceSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="elinkms"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call___ns1__run_USCOREeLink_USCOREMS(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns7__eLinkRequestMS*               ns7__eLinkRequestMS,
    // response parameters:
    _ns7__eLinkResultMS*                ns7__eLinkResultMS
  );
@endcode

C++ proxy class (defined in soapeUtilsServiceSoapProxy.h):
  class eUtilsServiceSoap;

*/

//gsoap ns1  service method-style:	run_USCOREeLink_USCOREMS document
//gsoap ns1  service method-encoding:	run_USCOREeLink_USCOREMS literal
//gsoap ns1  service method-action:	run_USCOREeLink_USCOREMS elinkms
int __ns1__run_USCOREeLink_USCOREMS(
    _ns7__eLinkRequestMS*               ns7__eLinkRequestMS,	///< Request parameter
    _ns7__eLinkResultMS*                ns7__eLinkResultMS	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__run_USCOREeSpell                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__run_USCOREeSpell" of service binding "eUtilsServiceSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="espell"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call___ns1__run_USCOREeSpell(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns8__eSpellRequest*                ns8__eSpellRequest,
    // response parameters:
    _ns8__eSpellResult*                 ns8__eSpellResult
  );
@endcode

C++ proxy class (defined in soapeUtilsServiceSoapProxy.h):
  class eUtilsServiceSoap;

*/

//gsoap ns1  service method-style:	run_USCOREeSpell document
//gsoap ns1  service method-encoding:	run_USCOREeSpell literal
//gsoap ns1  service method-action:	run_USCOREeSpell espell
int __ns1__run_USCOREeSpell(
    _ns8__eSpellRequest*                ns8__eSpellRequest,	///< Request parameter
    _ns8__eSpellResult*                 ns8__eSpellResult	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__run_USCOREeSpell_USCOREMS                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__run_USCOREeSpell_USCOREMS" of service binding "eUtilsServiceSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="espellms"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call___ns1__run_USCOREeSpell_USCOREMS(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns8__eSpellRequestMS*              ns8__eSpellRequestMS,
    // response parameters:
    _ns8__eSpellResultMS*               ns8__eSpellResultMS
  );
@endcode

C++ proxy class (defined in soapeUtilsServiceSoapProxy.h):
  class eUtilsServiceSoap;

*/

//gsoap ns1  service method-style:	run_USCOREeSpell_USCOREMS document
//gsoap ns1  service method-encoding:	run_USCOREeSpell_USCOREMS literal
//gsoap ns1  service method-action:	run_USCOREeSpell_USCOREMS espellms
int __ns1__run_USCOREeSpell_USCOREMS(
    _ns8__eSpellRequestMS*              ns8__eSpellRequestMS,	///< Request parameter
    _ns8__eSpellResultMS*               ns8__eSpellResultMS	///< Response parameter
);

/* End of eutils_lite.h */
